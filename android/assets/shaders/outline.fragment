#ifdef GL_ES
precision mediump float;
precision mediump int;
#endif

uniform sampler2D u_texture;

// The inverse of the viewport dimensions along X and Y
uniform vec2 u_viewportInverse;

// Color of the outline
uniform vec3 u_color;

varying vec4 v_color;
varying vec2 v_texCoord;

#define ALPHA_VALUE_BORDER 0.5

void main() {

	vec2 T = v_texCoord.xy;

	vec2 v = u_viewportInverse*vec2(2.85, 2.85);
	
	vec2 s = T;

	bool empty = texture2D(u_texture, T).a <= 0.1;
	bool any = false;

	float thickness = 1;
	float step = 1.0;

	for(float ix = -thickness; ix <= thickness; ix += step){
		any = any || texture2D(u_texture, s + vec2(ix, 0) * v).a > 0.1;
	}

	for(float iy = -thickness; iy <= thickness; iy += step){
		any = any || texture2D(u_texture, s + vec2(0, iy*1.159) * v).a > 0.1;
	}

	empty = empty && any;

	if(!empty){
		gl_FragColor = vec4(texture2D(u_texture, T));
	}else{
		gl_FragColor = vec4(u_color, 1.0);
	}

}
